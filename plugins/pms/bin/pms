#!/usr/bin/env sh
# Defaults
PMS_DEBUG=${PMS_DEBUG:-0}
PMS_NO_INTERACTION=${PMS_NO_INTERACTION:-0}

# Validation Checks
if [ -z "$PMS" ]; then
    echo
    echo "Could not find the PMS directory"
    echo
    exit 1
fi

####
# PMS Manager
#
# Usage: pms [OPTIONS] [COMMAND]
#
# Tool that helps manage PMS, easy to expand and add to
# @todo support no interaction
main() {
  while getopts "dn" o; do
    case ${o} in
      d) PMS_DEBUG=1 ;;
      n) PMS_NO_INTERACTION=1 ;;
    esac
    shift
  done

  if [ "$PMS_DEBUG" -eq "1" ]; then
      echo "[DEBUG] PMS:                $PMS"
      echo "[DEBUG] PMS_LOCAL:          $PMS_LOCAL"
      echo "[DEBUG] PMS_SHELL:          $PMS_SHELL"
      echo "[DEBUG] PMS_NO_INTERACTION: $PMS_NO_INTERACTION"
      echo "[DEBUG] @:                  $@"
      echo "[DEBUG] 0:                  $0"
      echo "[DEBUG] 1:                  $1"
      echo "[DEBUG] 2:                  $2"
      echo "[DEBUG] 3:                  $3"
  fi

  # ex: pms plugin list
  if [ ! -z "$1" ] && [ ! -z "$2" ]; then
    if [ $(command -v pms-$1-$2) ]; then
      pms-$1-$2 "$@"
      return $?
    elif [ -f $PMS/plugins/pms/bin/pms-$1-$2 ]; then
      source $PMS/plugins/pms/bin/pms-$1-$2 "$@"
      return
    else
      if [ "$PMS_DEBUG" -eq "1" ]; then
        echo "[DEBUG] Could not find 'pms-$1-$2'"
      fi
    fi
  fi

  # ex: pms upgrade
  if [ ! -z "$1" ]; then
    if [ $(command -v pms-$1) ]; then
      pms-$1 "$@"
      return $?
    elif [ -f $PMS/plugins/pms/bin/pms-$1 ]; then
      source $PMS/plugins/pms/bin/pms-$1 "$@"
      return
    else
      if [ "$PMS_DEBUG" -eq "1" ]; then
        echo "[DEBUG] Could not find 'pms-$1'"
      fi
    fi
  fi

  source $PMS/plugins/pms/bin/pms-help
}

main "$@"
